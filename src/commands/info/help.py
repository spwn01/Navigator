from telebot import TeleBot, types
from handler import update_commands, get_args
from constants import config

alphabet = config['alphabet']

name = 'help'
description = '–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ (–∑–∞–≥–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ | —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è).'
aliases = {
    'en': ['info', 'menu'],
    'ua': ['–¥–æ–ø–æ–º–æ–≥–∞'],
}
usage = '/help \(–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏ \| –Ω–∞–∑–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—É\)'

translate = {
    "info": "—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è",
    "utility": "—É—Ç–∏–ª—ñ—Ç–∏",
}
params = ['–Ω–∞–∑–≤–∞', alphabet['n'], 'name', 'n',
          '–æ–ø–∏—Å', alphabet['o'], 'o', 'description', 'd',
          '—Å–∏–Ω–æ–Ω—ñ–º–∏', alphabet['s'], 'c', 'synonyms', 's', 'aliases', 'a',
          '–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è', alphabet['v'], 'v', 'usage', 'u']

def run(client: TeleBot, message: types.Message):
    # Setting up global variables
    args = get_args(client, message)
    data = update_commands(client)
    raw_commands = []
    categories = []

    # Getting every command from client
    for command in data:
        for parameter in params:
            if args == parameter: return parameters(args, client, message)
        # Check if user want to get an exact command
        if args and args.startswith(command['name']):
            return get_command(client, message, command)
        else:
            for ali in command['aliases']:
                ali = ali.replace('/', '')
                if args.startswith(ali):
                    return get_command(client, message, command)

        # Modifying global variables
        if command['category'] not in categories:
            categories.append(command['category'])
        if command['name'] not in raw_commands:
            raw_commands.append({
                "name": command['name'],
                "category": command['category'],
            })

    # Handling command section for the text
    commands = []
    for cat in categories:
        _sorted = []
        for cmd in raw_commands:
            # print(cmd)
            if cmd['category'] == cat:
                _sorted.append(cmd['name'])

        commands.append(f"""
*{translate[cat].capitalize()}:*
\- /{", /".join(_sorted)}
        """)

    # Creating the text
    text = f"""
\| *–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ {client.user.first_name}*
üì¨ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞? –û—Å—å yci –º–æ—ó –∫–æ–º–∞–Ω–¥–∏\.
{''.join(commands)}
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help, a –ø–æ—Ç—ñ–º –Ω–∞–∑–≤—É –∫–æ–º–∞–Ω–¥–∏, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –±—ñ–ª—å—à–µ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É\. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `/help —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è`\.
    """

    # Sending our result
    client.send_message(message.chat.id, text, parse_mode='markdownv2')

def get_command(client: TeleBot, message: types.Message, command):
    _description = str(command['description']).replace('.', '\.').replace('(', '\(').replace(')', '\)').replace('|', '\|')
    error_text = "–ù–µ–º–∞—î —Å–∏–Ω–æ–Ω—ñ–º—ñ–≤\."

    text = f"""
\| *–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Å—Ç–æ—Å–æ–≤–Ω–æ –∫–æ–º–∞–Ω–¥–∏ _{command['name']}_*
üì¨ –Ø–∫—â–æ —è–∫–∏–π—Å—å –∑ –ø—É–Ω–∫—Ç—ñ–≤ –±—É–≤ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–∏–º, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ */help [–Ω–∞–∑–≤–∞ –ø—É–Ω–∫—Ç—É]*\. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `/help —Å–∏–Ω–æ–Ω—ñ–º–∏`\.

*–ù–∞–∑–≤–∞*: {command['name']} \(/{command['name']}\)
*–û–ø–∏—Å*: {_description}
*–°–∏–Ω–æ–Ω—ñ–º–∏*: {(lambda aliases: error_text if len(aliases) == 0 else ', '.join(aliases))(command['aliases'])}
*–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è*: {command['usage']}

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ {client.user.full_name}\.
    """

    client.send_message(message.chat.id, text, parse_mode='markdownv2')

# * Bold text - *text*
# * Italic text - _text_
# * Underlined text - __text__
# * Strikethrough text - ~text~
# * Spoilered text - ||text||
# * Copyable text - `text`

def parameters(args: str, client: TeleBot, message: types.Message):
    filtered = args.lower()

    if filtered == '–Ω–∞–∑–≤–∞' or filtered == alphabet['n'] or 'name' or filtered == 'n':
        text = f"""
\| *–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Å—Ç–æ—Å–æ–≤–Ω–æ –ø—É–Ω–∫—Ç—É _Ha–∑–≤a –∫o–ºa–Ω–¥–∏_*
üì¨ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ {client.user.full_name}\.

–¶–µ–π –ø—É–Ω–∫—Ç –ø–æ–∫–∞–∑—É—î –Ω–∞–∑–≤—É –∫–æ–º–∞–Ω–¥–∏, –∑–∞–≤–¥—è–∫–∏ —è–∫—ñ–π –º–æ–∂–Ω–∞ –∑ –ª–µ–≥–∫—ñ—Å—Ç—å—é –≤–∏–ø–æ–≤–Ω–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É\. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å: */[–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏]*\.

–ü—Ä–∏–∫–ª–∞–¥–∏: /start, `/calculator`\.

__Ta–∫o–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–µ –ø–∏—Å–∞—Ç–∏ */*, —è –≤—Å–µ–æ–¥–Ω–æ –∑—Ä–æ–∑—É–º—ñ—é —â–æ –≤–∏ —Ö–æ—Ç—ñ–ª–∏ —Å–∫–∞–∑–∞—Ç–∏\.__

–î–æ—Ä–µ—á—ñ, –≤–∏ —â–µ –º–æ–∂–µ—Ç–µ –≤–∏–∑–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏, –Ω–∞–ø–∏—Å–∞–≤ —ó—ó —Å–∏–Ω–æ–Ω—ñ–º\. –ë—ñ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π: `/help —Å–∏–Ω–æ–Ω—ñ–º–∏`\.

–î—è–∫—É—é –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–æ—ó—Ö –∫–æ–º–∞–Ω–¥\! –°–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ —è –∑–º—ñ–≥ –≤–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏\.
        """
        return client.send_message(message.chat.id, text, parse_mode="markdownv2")
    elif filtered == '–æ–ø–∏—Å' or filtered == alphabet['o'] or filtered == 'o' or filtered == 'description' or filtered == 'd':
        text = f"""
\| *–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Å—Ç–æ—Å–æ–≤–Ω–æ –ø—É–Ω–∫—Ç—É _O–ø–∏c –∫o–ºa–Ω–¥–∏_*
üì¨ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ {client.user.full_name}\.

–¶–µ–π –ø—É–Ω–∫—Ç –æ–ø–∏—Å—É—î —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –∫–æ–º–∞–Ω–¥–∏\. –ó–∞–≤–¥—è–∫–∏ —Ü—å–æ–º—É –ø—É–Ω–∫—Ç—É –º–æ–∂–Ω–∞ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É, i —â–æ –≤–æ–Ω–∞ —Ä–æ–±–∏—Ç—å\.

–©–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –æ–ø–∏—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –ø—Ä–æ—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ `/help [–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏]`\.

–î—è–∫—É—é –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–æ—ó—Ö –∫–æ–º–∞–Ω–¥\! –°–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ —è –∑–º—ñ–≥ –≤–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏\.
        """
        return client.send_message(message.chat.id, text, parse_mode="markdownv2")

    elif filtered == '—Å–∏–Ω–æ–Ω—ñ–º–∏' or filtered == alphabet['s'] or filtered == 'c' or filtered == 'synonyms' or filtered == 's' or filtered == 'aliases' or filtered == 'a':
        text = f"""
\| *–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Å—Ç–æ—Å–æ–≤–Ω–æ –ø—É–Ω–∫—Ç—É _B–∏–∫op–∏c—Ça–Ω–Ω—è –∫o–ºa–Ω–¥–∏_*
üì¨ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ {client.user.full_name}\.

–¶–µ–π –ø—É–Ω–∫—Ç –ø–æ–∫–∞–∑—É—î —Å–∏–Ω–æ–Ω—ñ–º–∏ –∫–æ–º–∞–Ω–¥–∏, –∑–∞–≤–¥—è–∫–∏ —è–∫–∏–º –º–æ–∂–Ω–∞ –≤–∏–∑–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞–≤—ñ—Ç—å –Ω–µ –Ω–∞–ø–∏—Å–∞–≤—à–∏ –ø—Ä–µ—Ñ—ñ–∫—Å—É, —á–∏ –Ω–∞–≤—ñ—Ç—å –Ω–∞–ø–∏—Å–∞–≤—à–∏ –Ω–∞–∑–≤—É –∫–æ–º–∞–Ω–¥–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é\. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å: */[–Ω–∞–∑–≤–∞ —Å–∏–Ω–æ–Ω—ñ–º—É]*\.

–ü—Ä–∏–∫–ª–∞–¥–∏: /info \(—Å–∏–Ω–æ–Ω—ñ–º –∫–æ–º–∞–Ω–¥–∏ /help\), `/–¥–æ–ø–æ–º–æ–≥–∞`, `/—Å—Ç–∞—Ä—Ç`\.

__Ta–∫o–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–µ –ø–∏—Å–∞—Ç–∏ */*, —è –≤—Å–µ–æ–¥–Ω–æ –∑—Ä–æ–∑—É–º—ñ—é —â–æ –≤–∏ —Ö–æ—Ç—ñ–ª–∏ —Å–∫–∞–∑–∞—Ç–∏\.__

–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å–∏–Ω–æ–Ω—ñ–º—ñ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å: `/help [–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏]`\.

–î—è–∫—É—é –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–æ—ó—Ö –∫–æ–º–∞–Ω–¥\! –°–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ —è –∑–º—ñ–≥ –≤–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏\.
        """
        return client.send_message(message.chat.id, text, parse_mode="markdownv2")

    elif filtered == '–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è' or filtered == alphabet['v'] or filtered == 'v' or filtered == 'usage' or filtered == 'u':
        text = f"""
\| *–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Å—Ç–æ—Å–æ–≤–Ω–æ –ø—É–Ω–∫—Ç—É _B–∏–∫op–∏c—Ça–Ω–Ω—è –∫o–ºa–Ω–¥–∏_*
üì¨ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ {client.user.full_name}\.

–¶–µ–π –ø—É–Ω–∫—Ç –ø–æ–∫–∞–∑—É—î —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: —è–∫—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –¥–ª—è —á–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ, i —Ç–æ–º—É –ø–æ–¥—ñ–±–Ω–µ\.

–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å: `/help [–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏]`\.

–ü—Ä–∏–∫–ª–∞–¥: /calculator \(–ø—Ä–∏–∫–ª–∞–¥\)\. –î–∞–Ω—ñ, —è–∫—ñ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è y –¥—É–∂–∫–∞—Ö - –∞—Ä–≥—É–º–µ–Ω—Ç–∏, i –≤–æ–Ω–∏ –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è \(–¥–æ —Ç–∏—Ö –ø—ñ—Ä, –ø–æ–∫–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –ø–æ—á–Ω–µ —Å–∫–∞—Ä–∂–∏—Ç–∏—Å—è\)\.

__B–∏ –º–æ–∂–µ—Ç–µ –Ω–µ –ø–∏—Å–∞—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏, —è–∫—ñ –≤–∫–∞–∑–∞–Ω—ñ y –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏, —è–∫—â–æ —Ü–µ –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ\.__

–î—è–∫—É—é –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–æ—ó—Ö –∫–æ–º–∞–Ω–¥\! –°–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ —è –∑–º—ñ–≥ –≤–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏\.
        """
        return client.send_message(message.chat.id, text, parse_mode="markdownv2")

